<section id="app">
  <a href="/"><- Voltar</a><br>
  <h1>{{post.Title}}</h1>
  <p>{{post.Content}}</p>
  <br>
  <h3>Comentários</h3>

  <div style="overflow: scroll; max-height: 800px;">
    <ul >
      <!-- Utilize looping v-for do VueJs para exibir os comentários (título e conteúdo) de forma dinâmica -->
      <li v-for="item in comments">      
        <h5>{{item.UserName}}</h5>
        <p>{{item.Comment}}</p>
      </li>
    </ul>

    <div style="width: 100%; padding: 20px; align-items: start;" >
      <form method="POST" @submit="getNewComment">
          <div >
              <label for="nome" style="font-size:large; font-weight: bold; display: block;">Nome do usuário</label>
              <input style="width: 350px;" type="text" id="nome" name="name" placeholder="Digite seu nome:" required/>
          </div>
          <p style="font-size: large; font-weight: bold;">Digite seu comentário abaixo:</p>
          <div>
              <textarea style="height: 120px; width: 350px; align-self:baseline;" rows="10" cols="20" id="comment" name="comment" required></textarea>
          </div>
  
          <div style="height: 100px;">
            <button type="submit" style="margin-right: 30px; color: blue;" name="salvar" id="salvar">Salvar</button>
            <button type="reset" style="color: red;">Cancelar</button>        
          </div >
      </form>
      
    </div>
  </div>

  
</section>

<script>
  var http = axios.create({
    baseURL: "<%- apiUrl%>",
    timeout: 10000,
  });
  const postId = "<%- postId %>"

  var app = new Vue({
    el: "#app",
    data: {
      post: {},
      comments: [],
      nome: "",
      newComment: ""
    },
    methods: {
      loadPost() {
        http.get("/posts/" + postId).then((response) => {
          this.post = response.data;
        });
      },
      loadComments() {
        //TODO: Criar função que realiza a chamada na API retornando os comentários pelo id do post
        //para usar o id do post utilize a constate postId criada a cima
        http.get("/comment/" + postId).then((response) => {
          this.comments = response.data;
        });
      },
      //implementando o form de comentario
      async getNewComment(){
        // a função aparentemente executa, porém há um problema de renderização da tela ao completar o submit do formulario
        // não reconhece o method post e não volta para a amesma pagina, mas ao acessar a mesma os dados inseridos se encontram nela
        this.nome = document.getElementById("nome");
        this.newComment = document.getElementById("comment")

        http.post("/comment/", {
          id: postId,
          user: this.nome.value,
          comment: this.newComment.value
        })
        .then((response) => {
          console.log(response)
        }).catch(function (error) {
          console.log(error);
        });

        location.reload()
      }
    },
    mounted() {
      this.loadPost();
      //TODO: Faça a chamada da função que carrega os comentários
      this.loadComments();
    },
  });
</script>